{
    "project_name": "AI Project",
    "description": "A project for GPT-based text generation and evaluation with custom dataset processing, model training, and evaluation.",
    "data": {
      "max_seq_len":1024,
      "raw": "Path to raw dataset",
      "processed": {
      "tokenized_data": "Path to tokenised dataset"
    },
    "tokenizer_files": {
      "vocab": "Path to vocab.json",
      "merges": "Path to merges.txt"
    },
    "max_sequence_length": 1024
  },
    "model": {
      "model_name": "GPTModel",
      "max_seq_len": 1024,
      "vocab_size": 50257,
      "embedding_dim": 768,
      "num_heads": 12,
      "num_layers": 12,
      "dropout": 0.1,
      "pretrained_model_path": "Path to final gpt_model.pth",
      "checkpoint": "Path to gpt_model.pth which has been resumed in checkpoints", 
      "checkpoints": "Path to checkpoints directory"
    },
    "training": {
      "batch_size": 8,
      "learning_rate": 5e-5,
      "num_epochs": 10,
      "save_model_dir": "Path to save checkpoints",
      "training_logs": "Path to save logs",
      "resume_from_checkpoint": true,
      "checkpoint_path": "Path to load checkpoints to resume training",
      "device": "cuda"
    },
    "evaluation": {
      "test_data_path": "Path for tokenised dataset",
      "batch_size": 8,
      "evaluation_device": "cuda",
      "evaluation_metrics": ["loss", "perplexity"]
    },
    "inference": {
      "generation_settings": {
        "max_length": 100,
        "temperature": 0.8,
        "top_k": 10
      }
    },
    "plotting": {
      "logs_dir": "Path to logs directory",
      "save_dir": "Path to figures directory",
      "plot_counter_file": "Path to save plot counter file",
      "plot_epochs_per_session": 5,
      "training_logs": "Path to save training logs"
    },
    "scripts": {
      "data_preprocessing": "Path to data_preprocessing.py",
      "dataset": "Path to dataset.py",
      "train": "Path to train.py",
      "evaluate": "Path to evaluate.py",
      "inference": "Path to inference.py",
      "plot_training_loss": "Path to Training_loss_graph_plotter.py"
    }
  }
  
